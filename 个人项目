import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import org.apache.commons.lang3.StringUtils;

import javax.swing.JTextPane;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JEditorPane;
import javax.swing.JFileChooser;
import javax.swing.JTextArea;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JScrollPane;
import java.awt.Button;
import java.awt.Desktop;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.LineNumberReader;
import java.util.Scanner;
import java.awt.TextArea;
import java.awt.ScrollPane;
import java.awt.Color;


public class Jtest extends JFrame {
	
	int tt=0;
	int words=0;
	int[] b = new int[10]; int j=0; int y; int k=0;

	public int test2 (String func,String file) throws IOException {

		
		if (func=="-l")             //行数统计功能
		{   tt=0;
			LineNumberReader lnr = null;
	        try {
	            lnr = new LineNumberReader(new FileReader(file));
	 
	            while ((lnr.readLine()) != null) {
	 
	                tt=tt+1;
	            }

	        } catch (FileNotFoundException ex) {
	            ex.printStackTrace();
	        } catch (IOException ex) {
	            ex.printStackTrace();
	        } finally {
	            try {
	                if (lnr != null) {
	                    lnr.close();
	                }
	            } catch (IOException ex) {
	                ex.printStackTrace();
	            }
	        }
	        
	        System.out.println("行数为："+tt);
	    }
		
		
		else if (func=="-w")                         //单词统计功能
		{    tt=0;
		     words=0;
		     
			try{
			 
			   Scanner sc=new Scanner(new File(file));
			 
			   while(sc.hasNextLine()){
			 
			    String str=sc.nextLine();
			 
			    String str1=str.trim();
			 
			    String[] bb=str1.split("\\s+");
			 
			    int aa=bb.length;
			 
			    words=words+aa;
			    
               
			 
			   }
			   
			   sc.close();
	
		       }catch(Exception ex){
			 
		  }
			  
		      tt=words;
		      System.out.println("单词数为："+tt);
		}
		
		
		else if (func=="-c")                          //字符数统计功能
		{
			tt=0;
			BufferedReader reader=new BufferedReader( new FileReader(file));
			  String wordsline=null;

			  while ((wordsline = reader.readLine())!=null) {
			  byte[] bytes=wordsline.getBytes();

			    tt=bytes.length+tt;
			  }
			  reader.close();
			  System.out.println("字符数为："+tt);
		}
		
		else if (func=="-z") {
			  BufferedReader reader=new BufferedReader( new FileReader(file));
			  String wordsline=null;
              int cc=0;
			  while ((wordsline = reader.readLine())!=null) {
			  int count = StringUtils.countMatches(wordsline,"//");
              cc=cc+count;
			    
			  }
			  tt=cc;
			  reader.close();
			  System.out.println("注释数为："+tt);
			
		}
		
		else if (func=="-k") {
			
			  BufferedReader reader=new BufferedReader( new FileReader(file));
			  String wordsline=null;
              int kk=0;
			  while ((wordsline = reader.readLine())!=null) {
			       
				  if (StringUtils.isBlank(wordsline)==true) {
					  kk++;
				  }
			    
			  }
			  tt=kk;
			  reader.close();
			  System.out.println("空行数为："+tt);
			
		}
		
		else if(func=="-s") {

			test2("-k",file); test2("-z",file);
			
			
		}
		
		return tt;
	}

	
	
	
	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Jtest frame = new Jtest();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Jtest() {

		getContentPane().setLayout(null);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 924, 470);
		contentPane = new JPanel();
		contentPane.setBackground(Color.WHITE);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(14, 43, 354, 246);
		contentPane.add(scrollPane);
		
		JTextArea textArea = new JTextArea();
		textArea.setBackground(Color.WHITE);
		scrollPane.setViewportView(textArea);
		textArea.setText("请选择文件");
		
		JScrollPane scrollPane_1 = new JScrollPane();
		scrollPane_1.setBounds(412, 44, 366, 246);
		contentPane.add(scrollPane_1);
		
		JTextArea textArea_1 = new JTextArea();
		scrollPane_1.setViewportView(textArea_1);
		textArea_1.setBackground(Color.WHITE);
		textArea_1.setText("请选择文件夹");
		

				
		//选择文件按钮
		Button button = new Button("\u9009\u62E9\u6587\u4EF6");
		button.setBounds(131, 12, 87, 25);
		JFileChooser chooser=new JFileChooser();
		chooser.setCurrentDirectory(new File("."));
		button.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent event)
			{
			
				int result =chooser.showOpenDialog(null);
				
				if(result==JFileChooser.APPROVE_OPTION)
				{
					String name=chooser.getSelectedFile().getPath();
					textArea.append("\n你选择的文件为："+name+"\n请选择要实现功能");
					File file = new File(name);
					
					try {
						Desktop.getDesktop().open(file);
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					
					
					
					//统计字符按钮
					Button button_1 = new Button("\u7EDF\u8BA1\u5B57\u7B26");
					button_1.addActionListener(new ActionListener() {
						public void actionPerformed(ActionEvent arg0) {
							try {
								int b1;
								b1=test2("-c",name);
								textArea.append("\n字符数为："+b1);
							} catch (IOException e) {
								// TODO 自动生成的 catch 块
								e.printStackTrace();
							}
						}
					});
					
					button_1.setBounds(14, 333, 87, 25);
					contentPane.add(button_1);
					
					
					//统计单词按钮
					Button button_2 = new Button("\u7EDF\u8BA1\u5355\u8BCD");
					button_2.addActionListener(new ActionListener() {
						public void actionPerformed(ActionEvent e) {
							int b2;
								try {
									b2 = test2("-w",name);
									textArea.append("\n单词数为:"+b2);
								} catch (IOException e1) {
									// TODO 自动生成的 catch 块
									e1.printStackTrace();
								}



						}
					});
					button_2.setBounds(142, 333, 87, 25);
					contentPane.add(button_2);
					
					
					//统计行数按钮
					Button button_3 = new Button("\u7EDF\u8BA1\u884C\u6570");
					button_3.addActionListener(new ActionListener() {
						public void actionPerformed(ActionEvent e) {
							try {
								int b3;
								b3=test2("-l",name);
								textArea.append("\n行数为："+b3);
							} catch (IOException e1) {
								// TODO 自动生成的 catch 块
								e1.printStackTrace();
							}

						}
					});
					button_3.setBounds(281, 333, 87, 25);
					contentPane.add(button_3);
					
					
					Button button_5 = new Button("\u7EDF\u8BA1\u7A7A\u884C");                //统计空行 
					button_5.addActionListener(new ActionListener() {
						public void actionPerformed(ActionEvent e) {
							try {
								int b6;
								b6=test2("-k",name);
								textArea.append("\n空行数为："+b6);
							} catch (IOException e1) {
								// TODO 自动生成的 catch 块
								e1.printStackTrace();
							}
							
						}
					});
					button_5.setBounds(60, 388, 87, 25);
					contentPane.add(button_5);
					
					
					Button button_6 = new Button("\u7EDF\u8BA1\u6CE8\u91CA");                 //统计注释
					button_6.addActionListener(new ActionListener() {
						public void actionPerformed(ActionEvent e) {
							
							try {
								int b7;
								b7=test2("-z",name);
								textArea.append("\n注释数为："+b7);
							} catch (IOException e1) {
								// TODO 自动生成的 catch 块
								e1.printStackTrace();
							}
						}
					});
					button_6.setBounds(200, 388, 87, 25);
					contentPane.add(button_6);
					
				}
			}
		 
		});
		contentPane.add(button);
		
		
		//选择文件夹按钮
		Button button_1 = new Button("\u9009\u62E9\u6587\u4EF6\u5939");
		button_1.setBounds(550, 12, 87, 25);
		JFileChooser chooser1=new JFileChooser();
		chooser1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		chooser1.setCurrentDirectory(new File("."));
		button_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
                int result =chooser1.showOpenDialog(null);
				
				if(result==JFileChooser.APPROVE_OPTION)
				{
					String name=chooser1.getSelectedFile().getPath();
					textArea_1.append("\n你选择的文件夹为："+name+"\n该文件夹下的txt文件为：\n");
					File[] file = new File(name).listFiles();
					
					for(y=0;y<file.length;y++){
						
						if(file[y].getName().endsWith(".txt")){
							textArea_1.append(file[y].getName()+"\n");
                            b[j]=y;
                            j++;
                            k++;
						}
					}
					
					
					//统计字符按钮
					Button button_1 = new Button("\u7EDF\u8BA1\u5B57\u7B26");
					button_1.addActionListener(new ActionListener() {
						public void actionPerformed(ActionEvent arg0) {
							try {
								int b1;
								for(j=0;j<k;j++) {
								b1=test2("-c",file[b[j]].getPath());
								textArea_1.append(file[b[j]].getName()+"    字符数为："+b1+"\n");
								}
							} catch (IOException e) {
								// TODO 自动生成的 catch 块
								e.printStackTrace();
							}
						}
					});
					
					button_1.setBounds(437, 315, 87, 25);
					contentPane.add(button_1);
					
					
					//统计单词按钮
					Button button_2 = new Button("\u7EDF\u8BA1\u5355\u8BCD");
					button_2.addActionListener(new ActionListener() {
						public void actionPerformed(ActionEvent e) {
							int b2;
								try {
									for(j=0;j<k;j++) {
									b2 = test2("-w",file[b[j]].getPath());
									textArea_1.append(file[b[j]].getName()+"    单词数为:"+b2+"\n");
									}
								} catch (IOException e1) {
									// TODO 自动生成的 catch 块
									e1.printStackTrace();
								}



						}
					});
					button_2.setBounds(550, 317, 87, 25);
					contentPane.add(button_2);
					
					
					//统计行数按钮
					Button button_3 = new Button("\u7EDF\u8BA1\u884C\u6570");
					button_3.addActionListener(new ActionListener() {
						public void actionPerformed(ActionEvent e) {
							try {
								int b3;
								for(j=0;j<k;j++) {
									
								b3=test2("-l",file[b[j]].getPath());
								textArea_1.append(file[b[j]].getName()+"    行数为："+b3+"\n");
								}
							} catch (IOException e1) {
								// TODO 自动生成的 catch 块
								e1.printStackTrace();
							}

						}
					});
					button_3.setBounds(673, 317, 87, 25);
					contentPane.add(button_3);
					
					
					Button button_21 = new Button("\u7EDF\u8BA1\u4EE3\u7801");  
					JFileChooser chooser2=new JFileChooser();
					chooser2.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
					chooser2.setCurrentDirectory(new File("."));                               //统计代码
					button_21.addActionListener(new ActionListener() {
						public void actionPerformed(ActionEvent arg0) {
							
							int result =chooser2.showOpenDialog(null);
							
							if(result==JFileChooser.APPROVE_OPTION)
							{
								String name=chooser2.getSelectedFile().getPath();
								textArea_1.append("\n你选择的文件夹为："+name+"\n该文件夹下的代码文件为：\n");
								File[] file = new File(name).listFiles();
								
								for(y=0;y<file.length;y++){
									
									if(file[y].getName().endsWith(".c.java")){
										textArea_1.append(file[y].getName()+"\n");
										
									}
								}
							
						}
					}});
					button_21.setBounds(807, 70, 87, 25);
					contentPane.add(button_21);

					
					Button button_31 = new Button("\u7EDF\u8BA1\u7A7A\u884C");              //统计空行 
					button_31.addActionListener(new ActionListener() {
						public void actionPerformed(ActionEvent e) {
							int b4;
							try {
								for(j=0;j<k;j++) {
								b4 = test2("-k",file[b[j]].getPath());
								textArea_1.append(file[b[j]].getName()+"    空格数为:"+b4+"\n");
								}
							} catch (IOException e1) {
								// TODO 自动生成的 catch 块
								e1.printStackTrace();
							}
							
							
						}
					});
					button_31.setBounds(807, 147, 87, 25);
					contentPane.add(button_31);
					
					
					Button button_4 = new Button("\u7EDF\u8BA1\u6CE8\u91CA");                //统计注释
					button_4.addActionListener(new ActionListener() {
						public void actionPerformed(ActionEvent e) {
							
							int b5;
							try {
								for(j=0;j<k;j++) {
								b5 = test2("-z",file[b[j]].getPath());
								textArea_1.append(file[b[j]].getName()+"    注释数为:"+b5+"\n");
								}
							} catch (IOException e1) {
								// TODO 自动生成的 catch 块
								e1.printStackTrace();
							}
						}
					});
					button_4.setBounds(807, 218, 87, 25);
					contentPane.add(button_4);
				}
			}
		});
		contentPane.add(button_1);
		
	}
}
